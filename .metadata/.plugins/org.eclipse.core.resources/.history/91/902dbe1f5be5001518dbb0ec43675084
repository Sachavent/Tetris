package DeroulementJeu;

import InterfaceGraphique.Fenetre;
import InterfaceGraphique.RenderBoard;

// Cest la fonction qui va gérer le tableau

public class Deroulement {
	
	public static int[][] Board;
	private Fenetre fenetre;

		// Fonction qui sert à initialiser le jeu
		public void initialise() {
			System.out.println("initialisation du jeu...");
			
			// Crée le plateau de jeu
			Board= new int[Fenetre.NUM_LIGNE_TETRIS][Fenetre.NUM_COL_TETRIS];
			
			// Permet d'initialiser l'interface graphique
			fenetre= new Fenetre();
			fenetre.creationfenetre();	
			
		  	// EXEMPLE DE PIECE
		  	Board[1][3]=0;
		  	Board[1][4]=5;
		  	Board[1][5]=0;
		  	Board[1][6]=0;
		  	Board[2][3]=0;
		  	Board[2][4]=5;
		  	Board[2][5]=5;
		  	Board[2][6]=0;
		  	Board[3][3]=0;
		  	Board[3][4]=5;
		  	Board[3][5]=0;
		  	Board[3][6]=0;
		  	Board[4][3]=0;
		  	Board[4][4]=0;
		  	Board[4][5]=0;
		  	Board[4][6]=0;
		}  
		
		// Fonction qui sera réactualisé au cours du temps
		public void run() {
			// Attente de 1 s avant de refresh
			try {
				Thread.sleep(2000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
			
			
			descendrepiece();
			
		}
		
		public static void descendrepiece() {
			
			int [][] temp = new int [Fenetre.NUM_LIGNE_TETRIS][Fenetre.NUM_COL_TETRIS];
			
			for (int i=0; i < Fenetre.NUM_LIGNE_TETRIS; i++) {
				for (int j=0; j < Fenetre.NUM_COL_TETRIS; j++) {
					if (i>1) {
					temp[i][j]=Board[i-1][j];
					}
					
				}
			}
			Board=temp;
			/*
		  	Board[1][3]=5;
		  	Board[1][4]=5;
		  	Board[1][5]=5;
		  	Board[1][6]=5;
		  	Board[2][3]=0;
		  	Board[2][4]=0;
		  	Board[2][5]=5;
		  	Board[2][6]=5;
		  	Board[3][3]=5;
		  	Board[3][4]=5;
		  	Board[3][5]=5;
		  	Board[3][6]=5;
		  	Board[4][3]=5;
		  	Board[4][4]=5;
		  	Board[4][5]=5;
		  	Board[4][6]=5;*/

		}
		
		public static int [][] getBoard() {
			return Board;
		}
		
}
