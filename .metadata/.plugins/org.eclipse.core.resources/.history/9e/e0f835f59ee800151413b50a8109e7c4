package DeroulementJeu;

import GestionFichier.Pieces;
import InterfaceGraphique.Fenetre;
import Launcher.Launcher;

public class DescendrePieces {
	private static boolean flag;
	public static boolean create_new_piece;
	public static void launch() {
		while (Launcher.finit==false) {
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		// On regarde si la piece sort du plateau quand elle avance
		// Si oui, alors on l'intègre au board et on crée une nouvelle piece
		if (Pieces.position_piececourante[0]+maxlign > Fenetre.NUM_LIGNE_TETRIS ) {
		  	int compteur=0;		
			for (int i=Pieces.position_piececourante[0]; i < Pieces.position_piececourante[0]+4; i++) {
				for (int j=Pieces.position_piececourante[1]; j < Pieces.position_piececourante[1]+4; j++) {
					if (compteur < 16) {
					if (Deroulement.piece_courante[Pieces.rotation_piececourante][compteur]>0) {
						Deroulement.Board[i][j]=Deroulement.piece_courante[Pieces.rotation_piececourante][compteur];
					}
					}
					compteur++;
					}
			}
			// Flag pour indiquer qu'il faut créer une nouvelle piece
			create_new_piece=true;
			// On incrémente la position s'il n'y a pas de problème...
		} else {Pieces.position_piececourante[0]+=1;	 }
		int compteur=12;
		for (int i=0; i < 4; i++) {
					if (Deroulement.piece_courante[Pieces.rotation_piececourante][compteur]!=0){
						flag=false;
					}
					compteur++;		
				}
		if (flag==false) {
			//Pieces.position_piececourante[0]+=1;
		}
				
				System.out.println("position ligne: "+ Pieces.position_piececourante[0]);

	}
	}
}
