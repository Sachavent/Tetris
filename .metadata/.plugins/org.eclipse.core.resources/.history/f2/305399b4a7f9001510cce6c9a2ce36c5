package DeroulementJeu;

import java.io.IOException;

import GestionFichier.ScoreFile;

// Score hérite de ScoreFile afin de pouvoir lire / écrire dans le fichier "Scores.txt"
public class Score extends ScoreFile{
	private static int score;
	private static int[] tableauscore;
	private static boolean malus;
	
	public static void augmenteScore() {
		// si le score == 10 -> envoie malus
		score++;
		
		// Permet d'indiquer qu'il y a un malus
		if (score==1) {
			setMalus(true);
		}
	}
	// Fonction qui retourne le score actuel
	public static int getScore() {
		return score;
	}
	
	public static void setScore(int newscore) {
		score=newscore;
	}
	
	public static void setScoreFinPartie() throws IOException {
		tableauscore=lectureFichierScore();
		for (int i=0; i < tableauscore.length; i++) {
			if (score > tableauscore[i]) {
				getResourceAsStream("/images/search_folder.png")
				tableauscore[i]=score;
				ecritureFichierScore(score, i+1);
			}
		}
	}
	public static int[] getTableauScore() {
		return tableauscore;
	}
	
	public static void setMalus(boolean etatmalus) {
		malus=etatmalus;		
	}
	
	// Indique si l'autre joueur doit avoir un malus ou pas (sert dans l'interface réseau)
	public static boolean getMalus() {
		// L'objectif est de retourner la valeur actuelle de "malus" mais il faut immédiatement repassé cette valeur à false apres
		// comme ça on envoei pas 2 malus
		boolean reset_flag;
		reset_flag=malus;
		setMalus(false);
		return reset_flag;
	}
}
